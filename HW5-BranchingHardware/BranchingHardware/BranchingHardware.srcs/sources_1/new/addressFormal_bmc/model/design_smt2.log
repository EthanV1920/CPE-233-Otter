
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.37+90 (git sha1 16ff3e0a3, clang 15.0.0 -fPIC -Os)


-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \BranchAddressGenFormal
Used module:     \BranchAddressGen

2.2. Analyzing design hierarchy..
Top module:  \BranchAddressGenFormal
Used module:     \BranchAddressGen
Removed 0 unused modules.
Module BranchAddressGenFormal directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== BranchAddressGenFormal ===

   Number of wires:                 14
   Number of wire bits:            355
   Number of public wires:           8
   Number of public wire bits:     256
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $add                            3
     $assert                         3
     $eq                             3
     BranchAddressGen                1

=== BranchAddressGen ===

   Number of wires:                  8
   Number of wire bits:            256
   Number of public wires:           8
   Number of public wire bits:     256
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $add                            3

=== design hierarchy ===

   BranchAddressGenFormal            1
     BranchAddressGen                1

   Number of wires:                 22
   Number of wire bits:            611
   Number of public wires:          16
   Number of public wire bits:     512
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $add                            6
     $assert                         3
     $eq                             3

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module BranchAddressGen.
Creating SMT-LIBv2 representation of module BranchAddressGenFormal.

End of script. Logfile hash: a35a47a67a, CPU: user 0.01s system 0.00s
Yosys 0.37+90 (git sha1 16ff3e0a3, clang 15.0.0 -fPIC -Os)
Time spent: 76% 2x write_smt2 (0 sec), 14% 2x read_ilang (0 sec), ...
