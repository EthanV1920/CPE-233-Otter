; SMT-LIBv2 description generated by Yosys 0.37+90 (git sha1 16ff3e0a3, clang 15.0.0 -fPIC -Os)
; yosys-smt2-module BranchConditionGen
(declare-sort |BranchConditionGen_s| 0)
(declare-fun |BranchConditionGen_is| (|BranchConditionGen_s|) Bool)
(declare-fun |BranchConditionGen#0| (|BranchConditionGen_s|) (_ BitVec 32)) ; \sourceReg2
; yosys-smt2-input sourceReg2 32
; yosys-smt2-wire sourceReg2 32
; yosys-smt2-witness {"offset": 0, "path": ["\\sourceReg2"], "smtname": "sourceReg2", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |BranchConditionGen_n sourceReg2| ((state |BranchConditionGen_s|)) (_ BitVec 32) (|BranchConditionGen#0| state))
(declare-fun |BranchConditionGen#1| (|BranchConditionGen_s|) (_ BitVec 32)) ; \sourceReg1
; yosys-smt2-input sourceReg1 32
; yosys-smt2-wire sourceReg1 32
; yosys-smt2-witness {"offset": 0, "path": ["\\sourceReg1"], "smtname": "sourceReg1", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |BranchConditionGen_n sourceReg1| ((state |BranchConditionGen_s|)) (_ BitVec 32) (|BranchConditionGen#1| state))
(define-fun |BranchConditionGen#2| ((state |BranchConditionGen_s|)) Bool (bvult (|BranchConditionGen#1| state) (|BranchConditionGen#0| state))) ; $lt$BranchConditionGen.sv:38$15_Y
(define-fun |BranchConditionGen#3| ((state |BranchConditionGen_s|)) (_ BitVec 1) (ite (|BranchConditionGen#2| state) #b1 #b0)) ; \isLessUnsigned
; yosys-smt2-output isLessUnsigned 1
; yosys-smt2-wire isLessUnsigned 1
(define-fun |BranchConditionGen_n isLessUnsigned| ((state |BranchConditionGen_s|)) Bool (= ((_ extract 0 0) (|BranchConditionGen#3| state)) #b1))
(define-fun |BranchConditionGen#4| ((state |BranchConditionGen_s|)) Bool (bvslt (|BranchConditionGen#1| state) (|BranchConditionGen#0| state))) ; $lt$BranchConditionGen.sv:35$13_Y
(define-fun |BranchConditionGen#5| ((state |BranchConditionGen_s|)) (_ BitVec 1) (ite (|BranchConditionGen#4| state) #b1 #b0)) ; \isLess
; yosys-smt2-output isLess 1
; yosys-smt2-wire isLess 1
(define-fun |BranchConditionGen_n isLess| ((state |BranchConditionGen_s|)) Bool (= ((_ extract 0 0) (|BranchConditionGen#5| state)) #b1))
(define-fun |BranchConditionGen#6| ((state |BranchConditionGen_s|)) Bool (= (|BranchConditionGen#1| state) (|BranchConditionGen#0| state))) ; $eq$BranchConditionGen.sv:31$11_Y
(define-fun |BranchConditionGen#7| ((state |BranchConditionGen_s|)) (_ BitVec 1) (ite (|BranchConditionGen#6| state) #b1 #b0)) ; \equal
; yosys-smt2-output equal 1
; yosys-smt2-wire equal 1
(define-fun |BranchConditionGen_n equal| ((state |BranchConditionGen_s|)) Bool (= ((_ extract 0 0) (|BranchConditionGen#7| state)) #b1))
(define-fun |BranchConditionGen_a| ((state |BranchConditionGen_s|)) Bool true)
(define-fun |BranchConditionGen_u| ((state |BranchConditionGen_s|)) Bool true)
(define-fun |BranchConditionGen_i| ((state |BranchConditionGen_s|)) Bool true)
(define-fun |BranchConditionGen_h| ((state |BranchConditionGen_s|)) Bool true)
(define-fun |BranchConditionGen_t| ((state |BranchConditionGen_s|) (next_state |BranchConditionGen_s|)) Bool true) ; end of module BranchConditionGen
; yosys-smt2-module BranchConditionGenFormal
(declare-sort |BranchConditionGenFormal_s| 0)
(declare-fun |BranchConditionGenFormal_is| (|BranchConditionGenFormal_s|) Bool)
(declare-fun |BranchConditionGenFormal#0| (|BranchConditionGenFormal_s|) (_ BitVec 32)) ; \sourceReg2
; yosys-smt2-input sourceReg2 32
; yosys-smt2-wire sourceReg2 32
; yosys-smt2-witness {"offset": 0, "path": ["\\sourceReg2"], "smtname": "sourceReg2", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |BranchConditionGenFormal_n sourceReg2| ((state |BranchConditionGenFormal_s|)) (_ BitVec 32) (|BranchConditionGenFormal#0| state))
(declare-fun |BranchConditionGenFormal#1| (|BranchConditionGenFormal_s|) (_ BitVec 32)) ; \sourceReg1
; yosys-smt2-input sourceReg1 32
; yosys-smt2-wire sourceReg1 32
; yosys-smt2-witness {"offset": 0, "path": ["\\sourceReg1"], "smtname": "sourceReg1", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |BranchConditionGenFormal_n sourceReg1| ((state |BranchConditionGenFormal_s|)) (_ BitVec 32) (|BranchConditionGenFormal#1| state))
; yosys-smt2-cell BranchConditionGen BranchAddressGen
; yosys-smt2-witness {"path": ["\\BranchAddressGen"], "smtname": "BranchAddressGen", "type": "cell"}
(declare-fun |BranchConditionGenFormal#2| (|BranchConditionGenFormal_s|) Bool) ; \isLessUnsigned
(declare-fun |BranchConditionGenFormal#3| (|BranchConditionGenFormal_s|) Bool) ; \isLess
(declare-fun |BranchConditionGenFormal#4| (|BranchConditionGenFormal_s|) Bool) ; \equal
(declare-fun |BranchConditionGenFormal_h BranchAddressGen| (|BranchConditionGenFormal_s|) |BranchConditionGen_s|)
; yosys-smt2-output isLessUnsigned 1
; yosys-smt2-wire isLessUnsigned 1
(define-fun |BranchConditionGenFormal_n isLessUnsigned| ((state |BranchConditionGenFormal_s|)) Bool (|BranchConditionGenFormal#2| state))
; yosys-smt2-output isLess 1
; yosys-smt2-wire isLess 1
(define-fun |BranchConditionGenFormal_n isLess| ((state |BranchConditionGenFormal_s|)) Bool (|BranchConditionGenFormal#3| state))
; yosys-smt2-output equal 1
; yosys-smt2-wire equal 1
(define-fun |BranchConditionGenFormal_n equal| ((state |BranchConditionGenFormal_s|)) Bool (|BranchConditionGenFormal#4| state))
(define-fun |BranchConditionGenFormal#5| ((state |BranchConditionGenFormal_s|)) Bool (bvult (|BranchConditionGenFormal#1| state) (|BranchConditionGenFormal#0| state))) ; $lt$BranchConditionGenFormal.sv:52$8_Y
(define-fun |BranchConditionGenFormal#6| ((state |BranchConditionGenFormal_s|)) (_ BitVec 1) (ite (|BranchConditionGenFormal#5| state) #b1 #b0)) ; $assert$BranchConditionGenFormal.sv:52$9_EN
; yosys-smt2-assert 0 $assert$BranchConditionGenFormal.sv:52$9 BranchConditionGenFormal.sv:52.39-53.39
(define-fun |BranchConditionGenFormal_a 0| ((state |BranchConditionGenFormal_s|)) Bool (or (|BranchConditionGenFormal#2| state) (not (= ((_ extract 0 0) (|BranchConditionGenFormal#6| state)) #b1)))) ; $assert$BranchConditionGenFormal.sv:52$9
(define-fun |BranchConditionGenFormal#7| ((state |BranchConditionGenFormal_s|)) Bool (bvslt (|BranchConditionGenFormal#1| state) (|BranchConditionGenFormal#0| state))) ; $lt$BranchConditionGenFormal.sv:47$5_Y
(define-fun |BranchConditionGenFormal#8| ((state |BranchConditionGenFormal_s|)) (_ BitVec 1) (ite (|BranchConditionGenFormal#7| state) #b1 #b0)) ; $assert$BranchConditionGenFormal.sv:47$6_EN
; yosys-smt2-assert 1 $assert$BranchConditionGenFormal.sv:47$6 BranchConditionGenFormal.sv:47.57-48.31
(define-fun |BranchConditionGenFormal_a 1| ((state |BranchConditionGenFormal_s|)) Bool (or (|BranchConditionGenFormal#3| state) (not (= ((_ extract 0 0) (|BranchConditionGenFormal#8| state)) #b1)))) ; $assert$BranchConditionGenFormal.sv:47$6
(define-fun |BranchConditionGenFormal#9| ((state |BranchConditionGenFormal_s|)) Bool (= (|BranchConditionGenFormal#0| state) (|BranchConditionGenFormal#1| state))) ; $eq$BranchConditionGenFormal.sv:42$2_Y
(define-fun |BranchConditionGenFormal#10| ((state |BranchConditionGenFormal_s|)) (_ BitVec 1) (ite (|BranchConditionGenFormal#9| state) #b1 #b0)) ; $assert$BranchConditionGenFormal.sv:42$3_EN
; yosys-smt2-assert 2 $assert$BranchConditionGenFormal.sv:42$3 BranchConditionGenFormal.sv:42.40-43.30
(define-fun |BranchConditionGenFormal_a 2| ((state |BranchConditionGenFormal_s|)) Bool (or (|BranchConditionGenFormal#4| state) (not (= ((_ extract 0 0) (|BranchConditionGenFormal#10| state)) #b1)))) ; $assert$BranchConditionGenFormal.sv:42$3
(define-fun |BranchConditionGenFormal_a| ((state |BranchConditionGenFormal_s|)) Bool (and
  (|BranchConditionGenFormal_a 0| state)
  (|BranchConditionGenFormal_a 1| state)
  (|BranchConditionGenFormal_a 2| state)
  (|BranchConditionGen_a| (|BranchConditionGenFormal_h BranchAddressGen| state))
))
(define-fun |BranchConditionGenFormal_u| ((state |BranchConditionGenFormal_s|)) Bool 
  (|BranchConditionGen_u| (|BranchConditionGenFormal_h BranchAddressGen| state))
)
(define-fun |BranchConditionGenFormal_i| ((state |BranchConditionGenFormal_s|)) Bool 
  (|BranchConditionGen_i| (|BranchConditionGenFormal_h BranchAddressGen| state))
)
(define-fun |BranchConditionGenFormal_h| ((state |BranchConditionGenFormal_s|)) Bool (and
  (= (|BranchConditionGenFormal_is| state) (|BranchConditionGen_is| (|BranchConditionGenFormal_h BranchAddressGen| state)))
  (= (|BranchConditionGenFormal#0| state) (|BranchConditionGen_n sourceReg2| (|BranchConditionGenFormal_h BranchAddressGen| state))) ; BranchConditionGen.sourceReg2
  (= (|BranchConditionGenFormal#1| state) (|BranchConditionGen_n sourceReg1| (|BranchConditionGenFormal_h BranchAddressGen| state))) ; BranchConditionGen.sourceReg1
  (= (|BranchConditionGenFormal#2| state) (|BranchConditionGen_n isLessUnsigned| (|BranchConditionGenFormal_h BranchAddressGen| state))) ; BranchConditionGen.isLessUnsigned
  (= (|BranchConditionGenFormal#3| state) (|BranchConditionGen_n isLess| (|BranchConditionGenFormal_h BranchAddressGen| state))) ; BranchConditionGen.isLess
  (= (|BranchConditionGenFormal#4| state) (|BranchConditionGen_n equal| (|BranchConditionGenFormal_h BranchAddressGen| state))) ; BranchConditionGen.equal
  (|BranchConditionGen_h| (|BranchConditionGenFormal_h BranchAddressGen| state))
))
(define-fun |BranchConditionGenFormal_t| ((state |BranchConditionGenFormal_s|) (next_state |BranchConditionGenFormal_s|)) Bool 
  (|BranchConditionGen_t| (|BranchConditionGenFormal_h BranchAddressGen| state) (|BranchConditionGenFormal_h BranchAddressGen| next_state))
) ; end of module BranchConditionGenFormal
; yosys-smt2-topmod BranchConditionGenFormal
; end of yosys output
